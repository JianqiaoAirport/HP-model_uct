import logging
import sys
import config


def string_to_list(str):
    l = []
    for s in str:
        if s == "H":
            l.append(-1)
        elif s == "P":
            l.append(1)
    return l


SEQ = {}

# PHPPHPHHHPHHPHHHHH -9
SEQ_1 = string_to_list("PHPPHPHHHPHHPHHHHH")
SEQ["SEQ_1"] = SEQ_1
# HHPPHPPHPPHPPHPPHPPHPPHH  -9
SEQ_2 = string_to_list("HHPPHPPHPPHPPHPPHPPHPPHH")
SEQ["SEQ_2"] = SEQ_2
# HHPHPHPHPHHHHPHPPPHPPPHPPPPHPPPHPPPHPHHHHPHPHPHPHH  -21 -30
SEQ_3 = string_to_list("HHPHPHPHPHHHHPHPPPHPPPHPPPPHPPPHPPPHPHHHHPHPHPHPHH")
SEQ["SEQ_3"] = SEQ_3
# PHHPHHHPHHHHPPHHHPPPPPPHPHHPPHHPHPPPPHHPHPHPHHPPP       -31
SEQ_4 = string_to_list("PHHPHHHPHHHHPPHHHPPPPPPHPHHPPHHPHPPPPHHPHPHPHHPPP")
SEQ["SEQ_4"] = SEQ_4
# HPHHPPHHHHPHHHPPHHPPHPHHHPHPHHPPHHPPPHPPPPPPPPHH        -30
SEQ_5 = string_to_list("HPHHPPHHHHPHHHPPHHPPHPHHHPHPHHPPHHPPPHPPPPPPPPHH")
SEQ["SEQ_5"] = SEQ_5
# PHPHHPHHHHHHPPHPHPPHPHHPHPHPPPHPPHHPPHHPPHPHPPHP        -31
SEQ_6 = string_to_list("PHPHHPHHHHHHPPHPHPPHPHHPHPHPPPHPPHHPPHHPPHPHPPHP")
SEQ["SEQ_6"] = SEQ_6
# PHPHHPPHPHHHPPHHPHHPPPHHHHHPPHPHHPHPHPPPPHPPHPHP        -30
SEQ_7 = string_to_list("PHPHHPPHPHHHPPHHPHHPPPHHHHHPPHPHHPHPHPPPPHPPHPHP")
SEQ["SEQ_7"] = SEQ_7
# PPHPPPHPHHHHPPHHHHPHHPHHHPPHPHPHPPHPPPPPPHHPHHPH        -30
SEQ_8 = string_to_list("PPHPPPHPHHHHPPHHHHPHHPHHHPPHPHPHPPHPPPPPPHHPHHPH")
SEQ["SEQ_8"] = SEQ_8
# PHHPPPPPPHHPPPHHHPHPPHPHHPPHPPHPPHHPPHHHHHHHPPHH        -30
SEQ_9 = string_to_list("PHHPPPPPPHHPPPHHHPHPPHPHHPPHPPHPPHHPPHHHHHHHPPHH")
SEQ["SEQ_9"] = SEQ_9

SEQ_11 = string_to_list("HPHPPHHPHPPHPHHPPHPH")
SEQ["SEQ_11"] = SEQ_11
SEQ_12 = string_to_list("HHPPHPPHPPHPPHPPHPPHPPHH")
SEQ["SEQ_12"] = SEQ_12
SEQ_13 = string_to_list("PPHPPHHPPPPHHPPPPHHPPPPHH")
SEQ["SEQ_13"] = SEQ_13
SEQ_14 = string_to_list("PPPHHPPHHPPPPPHHHHHHHPPHHPPPPHHPPHPP")
SEQ["SEQ_14"] = SEQ_14
SEQ_15 = string_to_list("PPHPPHHPPHHPPPPPHHHHHHHHHHPPPPPPHHPPHHPPHPPHHHHH")
SEQ["SEQ_15"] = SEQ_15
SEQ_16 = string_to_list("HHPHPHPHPHHHHPHPPPHPPPHPPPPHPPPHPPPHPHHHHPHPHPHPHH")
SEQ["SEQ_16"] = SEQ_16
SEQ_17 = string_to_list("PPHHHPHHHHHHHHPPPHHHHHHHHHHPHPPPHHHHHHHHHHHHPPPPHHHHHHPHHPHP")
SEQ["SEQ_17"] = SEQ_17
SEQ_18 = string_to_list("HHHHHHHHHHHHPHPHPPHHPPHHPPHPPHHPPHHPPHPPHHPPHHPPHPHPHHHHHHHHHHHH")
SEQ["SEQ_18"] = SEQ_18


ACTION_VECTOR_DICT = {}
INT_ACTION_DICT = {}
ACTION_INT_DICT = {}

if config.DIMENSIONALITY == 2:
    ACTION_VECTOR_DICT["START_TOKEN"] = (0, 0)
    ACTION_VECTOR_DICT["UP"] = (0, 1)
    ACTION_VECTOR_DICT["DOWN"] = (0, -1)
    ACTION_VECTOR_DICT["LEFT"] = (-1, 0)
    ACTION_VECTOR_DICT["RIGHT"] = (1, 0)

    INT_ACTION_DICT[4] = "START_TOKEN"
    INT_ACTION_DICT[0] = "UP"
    INT_ACTION_DICT[1] = "DOWN"
    INT_ACTION_DICT[2] = "LEFT"
    INT_ACTION_DICT[3] = "RIGHT"

    ACTION_INT_DICT["START_TOKEN"] = 4
    ACTION_INT_DICT["UP"] = 0
    ACTION_INT_DICT["DOWN"] = 1
    ACTION_INT_DICT["LEFT"] = 2
    ACTION_INT_DICT["RIGHT"] = 3
elif config.DIMENSIONALITY == 3:
    ACTION_VECTOR_DICT["START_TOKEN"] = (0, 0, 0)
    ACTION_VECTOR_DICT["UP"] = (0, 0, 1)
    ACTION_VECTOR_DICT["DOWN"] = (0, 0, -1)
    ACTION_VECTOR_DICT["LEFT"] = (0, -1, 0)
    ACTION_VECTOR_DICT["RIGHT"] = (0, 1, 0)
    ACTION_VECTOR_DICT["FORWARD"] = (1, 0, 0)
    ACTION_VECTOR_DICT["BACKWARD"] = (-1, 0, 0)

    INT_ACTION_DICT[6] = "START_TOKEN"
    INT_ACTION_DICT[0] = "UP"
    INT_ACTION_DICT[1] = "DOWN"
    INT_ACTION_DICT[2] = "LEFT"
    INT_ACTION_DICT[3] = "RIGHT"
    INT_ACTION_DICT[4] = "FORWARD"
    INT_ACTION_DICT[5] = "BACKWARD"

    ACTION_INT_DICT["START_TOKEN"] = 6
    ACTION_INT_DICT["UP"] = 0
    ACTION_INT_DICT["DOWN"] = 1
    ACTION_INT_DICT["LEFT"] = 2
    ACTION_INT_DICT["RIGHT"] = 3
    ACTION_INT_DICT["FORWARD"] = 4
    ACTION_INT_DICT["BACKWARD"] = 5
else:
    print("Dimensionality error")
    logging.error("Dimensionality error")
    sys.exit(1)

#  Global varibles
BEST_ENERGY = 0
BEST_ACTION_LIST = []

